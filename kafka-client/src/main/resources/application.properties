client.type=producer
topic.name=my-topic

# producer tuning for throughput
# increase buffer.memory when having many partitions
#producer.config=linger.ms=10,batch.size=102400,compression.type=zstd,compression.zstd.level=1

# consumer tuning for throughput
#consumer.config=fetch.min.bytes=102400
consumer.config=auto.offset.reset=earliest

# PLAINTEXT
bootstrap.servers=localhost:9092
security.protocol=PLAINTEXT

# TLS ENCRYPTION PEM
#config.providers=dir
#config.providers.dir.class=org.apache.kafka.common.config.provider.DirectoryConfigProvider
#bootstrap.servers=localhost:9093
#security.protocol=SSL
#ssl.truststore.type=PEM
#ssl.truststore.certificates=${dir:/tmp:localhost.crt}

# TLS AUTHENTICATION PEM
#config.providers=dir
#config.providers.dir.class=org.apache.kafka.common.config.provider.DirectoryConfigProvider
#bootstrap.servers=localhost:9093
#security.protocol=SSL
#ssl.truststore.type=PEM
#ssl.truststore.certificates=${dir:/tmp:localhost.crt}
#ssl.keystore.type=PEM
#ssl.keystore.certificate.chain=${dir:/tmp:localhost.crt}
#ssl.keystore.key=${dir:/tmp/test:localhost.key}

# TLS ENCRYPTION PKCS12
# export PASSWD="changeit"
#config.providers=env
#config.providers.env.class=org.apache.kafka.common.config.provider.EnvVarConfigProvider
#bootstrap.servers=localhost:9093
#security.protocol=SSL
#ssl.truststore.type=PKCS12
#ssl.truststore.location=/tmp/truststore.p12
#ssl.truststore.password=${env:PASSWD}

# TLS AUTHENTICATION PKCS12
# export PASSWD="changeit"
#config.providers=env
#config.providers.env.class=org.apache.kafka.common.config.provider.EnvVarConfigProvider
#bootstrap.servers=localhost:9093
#security.protocol=SSL
#ssl.truststore.type=PKCS12
#ssl.truststore.location=${dir:/tmp:truststore.p12}
#ssl.truststore.password=${env:PASSWD}
#ssl.keystore.type=PKCS12
#ssl.keystore.location=${dir:/tmp:truststore.p12}
#ssl.keystore.password=${env:PASSWD}

# PLAINTEXT SASL PLAIN
# export PASSWD="changeit"
#config.providers=env
#config.providers.env.class=org.apache.kafka.common.config.provider.EnvVarConfigProvider
#bootstrap.servers=localhost:9092
#security.protocol=SASL_PLAINTEXT
#sasl.mechanism=PLAIN
#sasl.username=my-user
#sasl.password=${env:PASSWD}

# PLAINTEXT SASL SCRAM-SHA-512
# export PASSWD="changeit"
#config.providers=env
#config.providers.env.class=org.apache.kafka.common.config.provider.EnvVarConfigProvider
#bootstrap.servers=localhost:9092
#security.protocol=SASL_PLAINTEXT
#sasl.mechanism=SCRAM-SHA-512
#sasl.username=my-user
#sasl.password=${env:PASSWD}

# TLS SASL PLAIN
# export PASSWD="changeit"
#config.providers=env
#config.providers.env.class=org.apache.kafka.common.config.provider.EnvVarConfigProvider
#bootstrap.servers=localhost:9093
#security.protocol=SASL_SSL
#ssl.truststore.type=PKCS12
#ssl.truststore.location=/tmp/truststore.p12
#ssl.truststore.password=${env:PASSWD}
#sasl.mechanism=PLAIN
#sasl.username=my-user
#sasl.password=${env:PASSWD}

# TLS SASL SCRAM-SHA-512
# export PASSWD="changeit"
#config.providers=env
#config.providers.env.class=org.apache.kafka.common.config.provider.EnvVarConfigProvider
#bootstrap.servers=localhost:9093
#security.protocol=SASL_SSL
#ssl.truststore.type=PKCS12
#ssl.truststore.location=/tmp/truststore.p12
#ssl.truststore.password=${env:PASSWD}
#sasl.mechanism=SCRAM-SHA-512
#sasl.username=my-user
#sasl.password=${env:PASSWD}

# TLS SASL OAUTHBEARER
# export PASSWD="changeit" CLIID="11111111111111" CLISEC="11111111111111"
#config.providers=env
#config.providers.env.class=org.apache.kafka.common.config.provider.EnvVarConfigProvider
#bootstrap.servers=localhost:9093
#security.protocol=SASL_SSL
#ssl.truststore.type=PKCS12
#ssl.truststore.location=/tmp/truststore.p12
#ssl.truststore.password=${env:PASSWD}
#sasl.mechanism=OAUTHBEARER
#sasl.oauth.token.endpoint.uri=http://example.com/openid-connect/token
#sasl.oauth.client.id=${env:CLIID}
#sasl.oauth.client.secret=${env:CLISEC}
